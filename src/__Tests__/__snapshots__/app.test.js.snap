// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing components render Tests Calculator.js component render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="big_container"
      >
        <div
          class="calc_text"
        >
          <h3>
            Let's do some Math!
          </h3>
        </div>
        <div
          class="container"
        >
          <input
            class="grid-item display"
            data-testid="output"
            id="output"
            placeholder="0"
            readonly=""
            value="0"
          />
          <button
            class="grid-item AC"
            type="button"
          >
            AC
          </button>
          <button
            class="grid-item operations"
            type="button"
          >
            +/-
          </button>
          <button
            class="grid-item procentage"
            type="button"
          >
            %
          </button>
          <button
            class="grid-item divide operation"
            type="button"
          >
            ÷
          </button>
          <button
            class="grid-item seven"
            type="button"
          >
            7
          </button>
          <button
            class="grid-item eight"
            type="button"
          >
            8
          </button>
          <button
            class="grid-item nine"
            type="button"
          >
            9
          </button>
          <button
            class="grid-item multiply operation"
            type="button"
          >
            ×
          </button>
          <button
            class="grid-item four"
            type="button"
          >
            4
          </button>
          <button
            class="grid-item five"
            type="button"
          >
            5
          </button>
          <button
            class="grid-item six"
            type="button"
          >
            6
          </button>
          <button
            class="grid-item minus operation"
            type="button"
          >
            -
          </button>
          <button
            class="grid-item one"
            type="button"
          >
            1
          </button>
          <button
            class="grid-item two"
            type="button"
          >
            2
          </button>
          <button
            class="grid-item three"
            type="button"
          >
            3
          </button>
          <button
            class="grid-item plus operation"
            type="button"
          >
            +
          </button>
          <button
            class="grid-item zero"
            type="button"
          >
            0
          </button>
          <button
            class="grid-item period"
            type="button"
          >
            .
          </button>
          <button
            class="grid-item equal operation"
            type="button"
          >
            =
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="big_container"
    >
      <div
        class="calc_text"
      >
        <h3>
          Let's do some Math!
        </h3>
      </div>
      <div
        class="container"
      >
        <input
          class="grid-item display"
          data-testid="output"
          id="output"
          placeholder="0"
          readonly=""
          value="0"
        />
        <button
          class="grid-item AC"
          type="button"
        >
          AC
        </button>
        <button
          class="grid-item operations"
          type="button"
        >
          +/-
        </button>
        <button
          class="grid-item procentage"
          type="button"
        >
          %
        </button>
        <button
          class="grid-item divide operation"
          type="button"
        >
          ÷
        </button>
        <button
          class="grid-item seven"
          type="button"
        >
          7
        </button>
        <button
          class="grid-item eight"
          type="button"
        >
          8
        </button>
        <button
          class="grid-item nine"
          type="button"
        >
          9
        </button>
        <button
          class="grid-item multiply operation"
          type="button"
        >
          ×
        </button>
        <button
          class="grid-item four"
          type="button"
        >
          4
        </button>
        <button
          class="grid-item five"
          type="button"
        >
          5
        </button>
        <button
          class="grid-item six"
          type="button"
        >
          6
        </button>
        <button
          class="grid-item minus operation"
          type="button"
        >
          -
        </button>
        <button
          class="grid-item one"
          type="button"
        >
          1
        </button>
        <button
          class="grid-item two"
          type="button"
        >
          2
        </button>
        <button
          class="grid-item three"
          type="button"
        >
          3
        </button>
        <button
          class="grid-item plus operation"
          type="button"
        >
          +
        </button>
        <button
          class="grid-item zero"
          type="button"
        >
          0
        </button>
        <button
          class="grid-item period"
          type="button"
        >
          .
        </button>
        <button
          class="grid-item equal operation"
          type="button"
        >
          =
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing components render Tests Home.js component render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="home"
      >
        <h1>
          Welcome to our page!
        </h1>
        <p>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sagittis arcu nec leo volutpat posuere. Fusce aliquam vel nibh sed sodales. Sed ut augue suscipit, suscipit neque id, tempor mauris. In laoreet eleifend ligula in rhoncus. Sed ornare rutrum ante, vitae viverra nisl dignissim egestas. Nulla facilisi. Quisque sed nunc tincidunt, ullamcorper leo nec, lacinia turpis. Quisque quam tortor, accumsan interdum gravida sit amet, hendrerit sed augue.
        </p>
        <p>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sagittis arcu nec leo volutpat posuere. Fusce aliquam vel nibh sed sodales. Sed ut augue suscipit, suscipit neque id, tempor mauris. In laoreet eleifend ligula in rhoncus. Sed ornare rutrum ante, vitae viverra nisl dignissim egestas. Nulla facilisi. Quisque sed nunc tincidunt, ullamcorper leo nec, lacinia turpis. Quisque quam tortor, accumsan interdum gravida sit amet, hendrerit sed augue.
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="home"
    >
      <h1>
        Welcome to our page!
      </h1>
      <p>
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sagittis arcu nec leo volutpat posuere. Fusce aliquam vel nibh sed sodales. Sed ut augue suscipit, suscipit neque id, tempor mauris. In laoreet eleifend ligula in rhoncus. Sed ornare rutrum ante, vitae viverra nisl dignissim egestas. Nulla facilisi. Quisque sed nunc tincidunt, ullamcorper leo nec, lacinia turpis. Quisque quam tortor, accumsan interdum gravida sit amet, hendrerit sed augue.
      </p>
      <p>
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sagittis arcu nec leo volutpat posuere. Fusce aliquam vel nibh sed sodales. Sed ut augue suscipit, suscipit neque id, tempor mauris. In laoreet eleifend ligula in rhoncus. Sed ornare rutrum ante, vitae viverra nisl dignissim egestas. Nulla facilisi. Quisque sed nunc tincidunt, ullamcorper leo nec, lacinia turpis. Quisque quam tortor, accumsan interdum gravida sit amet, hendrerit sed augue.
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing components render Tests Quote.js component render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="quote"
      >
        <p>
          Mathematics is not about numbers, equations, computations or algorithms: it's about understanding.
          <br />
          <strong>
            - William Paul Thurston
          </strong>
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="quote"
    >
      <p>
        Mathematics is not about numbers, equations, computations or algorithms: it's about understanding.
        <br />
        <strong>
          - William Paul Thurston
        </strong>
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
